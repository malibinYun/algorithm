package baekjoon

//피보나치 수 3
//문제
//피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.
//
//이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n>=2)가 된다.
//
//n=17일때 까지 피보나치 수를 써보면 다음과 같다.
//
//0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597
//
//n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.
//
//입력
//첫째 줄에 n이 주어진다. n은 1,000,000,000,000,000,000보다 작거나 같은 자연수이다.
//
//출력
//첫째 줄에 n번째 피보나치 수를 1,000,000으로 나눈 나머지를 출력한다.
//
//예제 입력 1
//1000
//예제 출력 1
//228875

import java.io.BufferedReader
import java.io.InputStreamReader

fun main() {
    val input = BufferedReader(InputStreamReader(System.`in`)).readLine().toLong()
    val n = (input % 1_500_000).toInt()

    val fibonacci = LongArray(1_500_000) { 0 }
    fibonacci[0] = 0
    fibonacci[1] = 1

    for (i in 2..n) {
        fibonacci[i] = (fibonacci[i - 2] + fibonacci[i - 1]) % 1_000_000
    }
    println(fibonacci[n])
}

// 피사노 주기
// 피보나치 수를 나눈 나머지는 항상 주기를 가진다.
// 피보나치 수를 나눌 수를 K라도 할 때, K = 10의n승 이면, 피사노 주기는 15*10의(n-1)승 이다.
// K가 10의 6승인 1,000,000이면 피사노 주기는 1,500,000이다.
// 1,500,000 번째 까지의 피보나치 수를 1,000,000로 나눈 나머지 값들을 구하면 그 이후 수는 계산할 필요가 없다.
